(self.webpackChunkproject_test=self.webpackChunkproject_test||[]).push([[533],{7228:t=>{t.exports=function(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}},2858:t=>{t.exports=function(t){if(Array.isArray(t))return t}},3884:t=>{t.exports=function(t,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var e=[],r=!0,o=!1,i=void 0;try{for(var a,c=t[Symbol.iterator]();!(r=(a=c.next()).done)&&(e.push(a.value),!n||e.length!==n);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return e}}},521:t=>{t.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},3038:(t,n,e)=>{var r=e(2858),o=e(3884),i=e(379),a=e(521);t.exports=function(t,n){return r(t)||o(t,n)||i(t,n)||a()}},379:(t,n,e)=>{var r=e(7228);t.exports=function(t,n){if(t){if("string"==typeof t)return r(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?r(t,n):void 0}}},1358:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>l});var r=e(3038),o=e.n(r),i=e(8655),a=e.n(i),c=e(7294);function u(){var t=a()(["\n    display:            flex;\n    flex-direction:     column;\n    height:             100vh;\n    width:              100vw;\n    justify-content:    center;\n    align-items:        center;\n    color:              white;\n    padding-top:        2rem;\n    font-size:          5rem;\n\n    @media screen and (max-width:   425px){\n        font-size:      3rem;\n    }\n\n    @media screen and (max-width:   320px) {\n        font-size:      2rem;\n    }\n"]);return u=function(){return t},t}var s=e(9163).ZP.div(u());const l=function(){var t=(0,c.useState)(""),n=o()(t,2),e=n[0],r=n[1];return(0,c.useEffect)((function(){fetch("http://114.32.157.74/PythonFlask/api/v1/",{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({method:"fetch_ip"})}).then((function(t){return t.json()})).then((function(t){r(t.ip)}))}),[e]),c.createElement(s,null,"Your IP is:",c.createElement("br",null),e)}}}]);